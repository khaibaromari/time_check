# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
write.xlsx(time_checked_df, "output/time_checked_df.xlsx")
write.xlsx(audit_time_checked_df, "output/audit_time_checked_df.xlsx")
source("functions/time_check.R")
library(openxlsx)
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
write.xlsx(time_checked_df, "output/time_checked_df.xlsx")
write.xlsx(audit_time_checked_df, "output/audit_time_checked_df.xlsx")
source("functions/time_check.R")
library(openxlsx)
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
write.xlsx(time_checked_df, "output/time_checked_df.xlsx")
write.xlsx(audit_time_checked_df, "output/audit_time_checked_df.xlsx")
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
source("functions/time_check.R")
View(df)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,village_col = "")
View(df)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,village_col = "village",device_id = "deviceid")
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,village_col = "village",device_id = "deviceid", same_village_threshold = 2, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,village_col = "village",device_id = "deviceid", same_village_threshold = 2, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,village_col = "village",device_id = "deviceid", same_village_threshold = 2, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,village_col = "village",device_id = "deviceid", same_village_threshold = 2, diff_village_threshold = 10)
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
library(openxlsx)
source("functions/time_check.R")
library(openxlsx)
source("functions/time_check.R")
library(openxlsx)
source("functions/time_check.R")
library(openxlsx)
source("functions/time_check.R")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df1 <- read.xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df1 ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
time_btwn_ints <- function(df,device_id,start_col = "start",end_col = "end",village_col, same_village_threshold=3,diff_village_threshold=5){
library(dplyr)
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- as.numeric(difftime(paste(substr(as.vector(checked_df[[start_col]]),1,10), substr(checked_df[[start_col]], 12,19), sep = " "),paste(substr(checked_df$end_2,1,10), substr(checked_df$end_2, 12,19), sep = " ") , units = "mins"))
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
checked_df$village_2 <- village_2[-length(village_2)]
checked_df$CHECK_gap_between_ints <- case_when(
checked_df[[village_col]]!=checked_df$village_2 & checked_df$gap_between_ints < diff_village_threshold ~ paste0("the elapsed time between two interviews in different villages is less than ",diff_village_threshold, " minutes"),
checked_df[[village_col]]==checked_df$village_2 & checked_df$gap_between_ints < same_village_threshold ~ paste0("the elapsed time between two interviews is less than ",same_village_threshold, " minutes"),
TRUE ~ "okay"
)
for (i in 1:length(unique(checked_df[[device_id]]))) {
checked_df[checked_df[[device_id]] == unique(checked_df[[device_id]])[i],"gap_between_ints"][1,] <- NA
checked_df[checked_df[[device_id]] == unique(checked_df[[device_id]])[i],"CHECK_gap_between_ints"][1,] <- "okay"
}
checked_df <- checked_df[,-which(names(checked_df) %in% c("end_2","village_2"))]
return(checked_df)
}
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df1 ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(openxlsx)
library(openxlsx)
source("functions/time_check.R")
# reading the raw data set
df <- read.xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(df)
unique(df$deviceid)
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints)
df1 <- read.xlsx("input/data_frame.xlsx")
str(df)
str(df1)
df_3 <- read.xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df_3 ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df_3 ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
# exporting the result
write.xlsx(time_checked_df, "output/time_checked_df.xlsx")
write.xlsx(audit_time_checked_df, "output/audit_time_checked_df.xlsx")
write.xlsx(elapsed_time_between_ints, "output/elapsed_time_between_ints_checked_df.xlsx")
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df_3 ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# time check based on start and end time
time_checked_df <- time_check(df, time_min, time_max)
# time check based on both audit files and start and end time
audit_time_checked_df <- time_check_audit(df, x_uuid = "_uuid", time_min, time_max,audit_dir_path = "audit_files/", today = "date")
# check the elapsed time between each interview
elapsed_time_between_ints <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
# exporting the result
write.xlsx(time_checked_df, "output/time_checked_df.xlsx")
write.xlsx(audit_time_checked_df, "output/audit_time_checked_df.xlsx")
write.xlsx(elapsed_time_between_ints, "output/elapsed_time_between_ints_checked_df.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(readxl)
source("functions/time_check.R")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
df <- df
View(df)
df <- df
device_id <- "deviceid"
start_col = "start"
end_col = "end"
same_village_threshold=3
diff_village_threshold=5
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- difftime(as.POSIXct(ymd_hms(checked_df[[start_col]])), as.POSIXct(ymd_hms(checked_df$end_2)), units = "mins")
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
village_col <- "village"
same_village_threshold=3
diff_village_threshold=5
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- difftime(as.POSIXct(ymd_hms(checked_df[[start_col]])), as.POSIXct(ymd_hms(checked_df$end_2)), units = "mins")
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
checked_df$village_2 <- village_2[-length(village_2)]
View(checked_df)
checked_df$village_2 <- village_2[-length(village_2)]
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]!=checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < diff_village_threshold] <- paste0("the elapsed time between two interviews in different villages is less than ",diff_village_threshold, " minutes")
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]==checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < same_village_threshold] <- paste0("the elapsed time between two interviews in the same village is less than ",same_village_threshold, " minutes")
for (i in unique(checked_df[[device_id]])) {
checked_df[checked_df[[device_id]] == i,"gap_between_ints"][1] <- NA
checked_df[checked_df[[device_id]] == i,"CHECK_gap_between_ints"][1] <- "okay"
}
checked_df <- checked_df[,-which(names(checked_df) %in% c("end_2","village_2"))]
View(checked_df)
df <- df
device_id <- "deviceid"
start_col = "start"
end_col = "end"
village_col <- "village"
same_village_threshold=3
diff_village_threshold=5
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- difftime(as.POSIXct(ymd_hms(checked_df[[start_col]])), as.POSIXct(ymd_hms(checked_df$end_2)), units = "mins")
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
checked_df$village_2 <- village_2[-length(village_2)]
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]!=checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < diff_village_threshold] <- paste0("the elapsed time between two interviews in different villages is less than ",diff_village_threshold, " minutes")
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]==checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < same_village_threshold] <- paste0("the elapsed time between two interviews in the same village is less than ",same_village_threshold, " minutes")
View(checked_df)
df <- df
device_id <- "deviceid"
start_col = "start"
end_col = "end"
village_col <- "village"
same_village_threshold=3
diff_village_threshold=5
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- difftime(as.POSIXct(ymd_hms(checked_df[[start_col]])), as.POSIXct(ymd_hms(checked_df$end_2)), units = "mins")
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
checked_df$village_2 <- village_2[-length(village_2)]
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]!=checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < diff_village_threshold] <- paste0("the elapsed time between two interviews in different villages is less than ",diff_village_threshold, " minutes")
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]==checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < same_village_threshold] <- paste0("the elapsed time between two interviews in the same village is less than ",same_village_threshold, " minutes")
View(checked_df)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
df <- df
device_id <- "deviceid"
start_col = "start"
end_col = "end"
village_col <- "village"
same_village_threshold=3
diff_village_threshold=5
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- difftime(as.POSIXct(ymd_hms(checked_df[[start_col]])), as.POSIXct(ymd_hms(checked_df$end_2)), units = "mins")
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
checked_df$village_2 <- village_2[-length(village_2)]
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]!=checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < diff_village_threshold] <- paste0("the elapsed time between two interviews in different villages is less than ",diff_village_threshold, " minutes")
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]==checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < same_village_threshold] <- paste0("the elapsed time between two interviews in the same village is less than ",same_village_threshold, " minutes")
View(checked_df)
for (i in unique(checked_df[[device_id]])) {
checked_df[checked_df[[device_id]] == i,"gap_between_ints"][1] <- NA
checked_df[checked_df[[device_id]] == i,"CHECK_gap_between_ints"][1] <- "okay"
}
View(checked_df)
df <- df
device_id <- "deviceid"
start_col = "start"
end_col = "end"
village_col <- "village"
same_village_threshold=3
diff_village_threshold=5
checked_df <- df
checked_df <- checked_df[order(checked_df[[start_col]]), ]
checked_df <- checked_df[order(checked_df[[device_id]]), ]
end_2 <- checked_df[[end_col]][1]
end_2 <- append(end_2, checked_df[[end_col]])
checked_df$end_2 <- end_2[-length(end_2)]
checked_df$gap_between_ints <- difftime(as.POSIXct(ymd_hms(checked_df[[start_col]])), as.POSIXct(ymd_hms(checked_df$end_2)), units = "mins")
village_2 <- checked_df[[village_col]][1]
village_2 <- append(village_2, checked_df[[village_col]])
checked_df$village_2 <- village_2[-length(village_2)]
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]!=checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < diff_village_threshold] <- paste0("the elapsed time between two interviews in different villages is less than ",diff_village_threshold, " minutes")
checked_df$CHECK_gap_between_ints[checked_df[[village_col]]==checked_df$village_2 & as.numeric(checked_df$gap_between_ints) < same_village_threshold] <- paste0("the elapsed time between two interviews in the same village is less than ",same_village_threshold, " minutes")
View(checked_df)
unique(checked_df[[device_id]])
i = "30f76c4fd0e"
checked_df[checked_df[[device_id]] == i,"gap_between_ints"]
[1]
checked_df[checked_df[[device_id]] == i,"gap_between_ints"][1]
checked_df$gap_between_ints[checked_df[[device_id]] == i][1]
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
library(readxl)
source("functions/time_check.R")
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
library(readxl)
source("functions/time_check.R")
# initializing the minimum and maximum interview duration (in minutes) to be flagged
time_min <- 15
time_max <- 60
# reading the raw data set
df <- read_xlsx("input/data_frame.xlsx")
# check the elapsed time between each interview
elapsed_time_between_ints1 <- time_btwn_ints(df ,device_id = "deviceid", start_col = "start", end_col = "end", village_col = "village", same_village_threshold = 3, diff_village_threshold = 10)
View(elapsed_time_between_ints1)
View(elapsed_time_between_ints1)
